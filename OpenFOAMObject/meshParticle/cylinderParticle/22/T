/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  7
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "22";
    object      T;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 1 0 0 0];

internalField   nonuniform List<scalar> 
900
(
474.929
474.92
474.9
474.868
474.821
474.756
474.666
474.543
474.375
474.143
473.821
473.369
472.72
471.764
470.3
467.926
463.724
455.237
434.704
374.313
443.621
443.594
443.537
443.445
443.312
443.125
442.867
442.516
442.037
441.381
440.476
439.211
437.417
434.816
430.939
424.943
415.236
398.665
368.988
315.381
416.57
416.527
416.437
416.293
416.083
415.791
415.389
414.844
414.104
413.099
411.724
409.828
407.184
403.445
398.065
390.175
378.389
360.561
333.789
295.745
393.27
393.214
393.097
392.911
392.64
392.262
391.748
391.053
390.118
388.859
387.159
384.853
381.703
377.371
371.37
363.012
351.363
335.299
313.849
287.227
373.276
373.21
373.073
372.855
372.54
372.102
371.509
370.715
369.655
368.244
366.366
363.862
360.52
356.052
350.083
342.142
331.695
318.258
301.687
282.685
356.191
356.119
355.969
355.731
355.388
354.915
354.278
353.432
352.314
350.845
348.918
346.396
343.103
338.818
333.28
326.199
317.305
306.449
293.771
279.91
341.66
341.585
341.429
341.182
340.828
340.342
339.693
338.837
337.719
336.269
334.394
331.984
328.903
324.994
320.086
314.015
306.668
298.046
288.352
278.068
329.362
329.287
329.131
328.885
328.534
328.055
327.419
326.589
325.517
324.142
322.391
320.178
317.403
313.961
309.745
304.675
298.717
291.93
284.504
276.78
319.011
318.938
318.787
318.55
318.213
317.756
317.155
316.376
315.381
314.119
312.535
310.564
308.137
305.184
301.646
297.487
292.714
287.4
281.699
275.85
310.346
310.278
310.136
309.914
309.6
309.176
308.623
307.913
307.013
305.887
304.491
302.778
300.702
298.22
295.301
291.934
288.144
283.998
279.615
275.162
303.137
303.074
302.944
302.741
302.455
302.072
301.575
300.942
300.149
299.165
297.961
296.502
294.76
292.707
290.331
287.633
284.643
281.418
278.047
274.647
297.174
297.117
297.001
296.82
296.565
296.226
295.789
295.237
294.55
293.708
292.688
291.467
290.026
288.351
286.438
284.295
281.95
279.448
276.856
274.257
292.274
292.224
292.121
291.962
291.74
291.446
291.068
290.595
290.012
289.303
288.452
287.444
286.268
284.917
283.392
281.702
279.871
277.936
275.946
273.96
288.272
288.229
288.141
288.004
287.813
287.562
287.241
286.843
286.354
285.766
285.066
284.245
283.297
282.217
281.011
279.687
278.266
276.774
275.249
273.732
285.026
284.989
284.914
284.798
284.637
284.426
284.158
283.827
283.424
282.942
282.374
281.712
280.955
280.101
279.154
278.123
277.025
275.879
274.714
273.557
282.41
282.379
282.316
282.219
282.085
281.91
281.689
281.418
281.09
280.7
280.244
279.717
279.117
278.447
277.709
276.912
276.067
275.191
274.302
273.423
280.316
280.29
280.238
280.159
280.049
279.906
279.726
279.506
279.242
278.93
278.567
278.151
277.682
277.159
276.588
275.975
275.328
274.661
273.986
273.321
278.651
278.63
278.588
278.523
278.434
278.318
278.174
277.998
277.788
277.541
277.255
276.93
276.565
276.161
275.722
275.253
274.761
274.255
273.745
273.242
277.337
277.32
277.286
277.234
277.162
277.07
276.955
276.816
276.651
276.457
276.234
275.982
275.7
275.39
275.055
274.698
274.326
273.944
273.56
273.182
276.306
276.293
276.266
276.224
276.168
276.095
276.005
275.896
275.766
275.616
275.444
275.25
275.034
274.798
274.544
274.274
273.994
273.707
273.419
273.136
275.504
275.493
275.472
275.44
275.395
275.338
275.268
275.183
275.084
274.968
274.836
274.688
274.524
274.345
274.154
273.951
273.741
273.527
273.312
273.101
274.884
274.875
274.859
274.834
274.799
274.755
274.701
274.636
274.559
274.471
274.371
274.259
274.135
274.001
273.857
273.706
273.55
273.39
273.231
273.075
274.407
274.401
274.388
274.369
274.343
274.309
274.267
274.218
274.16
274.093
274.017
273.933
273.841
273.74
273.634
273.521
273.406
273.288
273.17
273.055
274.045
274.04
274.03
274.015
273.995
273.97
273.938
273.901
273.857
273.807
273.75
273.688
273.619
273.545
273.466
273.383
273.298
273.211
273.125
273.041
273.77
273.766
273.759
273.748
273.733
273.713
273.69
273.662
273.629
273.592
273.55
273.504
273.453
273.398
273.34
273.279
273.217
273.154
273.091
273.03
273.564
273.561
273.555
273.547
273.536
273.521
273.504
273.483
273.459
273.431
273.401
273.366
273.329
273.289
273.247
273.203
273.157
273.112
273.066
273.021
273.41
273.408
273.404
273.397
273.389
273.379
273.366
273.35
273.333
273.312
273.29
273.265
273.238
273.209
273.178
273.146
273.113
273.08
273.048
273.015
273.296
273.294
273.291
273.287
273.281
273.273
273.263
273.252
273.239
273.225
273.208
273.19
273.171
273.15
273.128
273.105
273.081
273.058
273.034
273.011
273.212
273.211
273.209
273.206
273.201
273.195
273.189
273.18
273.171
273.161
273.149
273.136
273.122
273.107
273.091
273.075
273.058
273.041
273.024
273.008
273.151
273.15
273.149
273.146
273.143
273.139
273.134
273.128
273.122
273.114
273.106
273.096
273.086
273.076
273.064
273.053
273.041
273.029
273.017
273.006
273.107
273.106
273.105
273.103
273.101
273.098
273.095
273.09
273.086
273.08
273.074
273.068
273.061
273.053
273.045
273.037
273.029
273.02
273.012
273.004
273.075
273.075
273.074
273.073
273.071
273.069
273.066
273.063
273.06
273.056
273.052
273.047
273.042
273.037
273.032
273.026
273.02
273.014
273.008
273.003
273.052
273.052
273.051
273.051
273.049
273.048
273.046
273.044
273.042
273.039
273.036
273.033
273.029
273.026
273.022
273.018
273.014
273.01
273.006
273.002
273.036
273.036
273.036
273.035
273.034
273.033
273.032
273.03
273.029
273.027
273.025
273.023
273.02
273.018
273.015
273.012
273.01
273.007
273.004
273.001
273.025
273.025
273.024
273.024
273.023
273.023
273.022
273.021
273.02
273.019
273.017
273.016
273.014
273.012
273.01
273.008
273.007
273.005
273.003
273.001
273.017
273.017
273.017
273.016
273.016
273.016
273.015
273.014
273.013
273.013
273.012
273.011
273.009
273.008
273.007
273.006
273.004
273.003
273.002
273.001
273.011
273.011
273.011
273.011
273.011
273.011
273.01
273.01
273.009
273.009
273.008
273.007
273.006
273.006
273.005
273.004
273.003
273.002
273.001
273
273.008
273.008
273.008
273.007
273.007
273.007
273.007
273.006
273.006
273.006
273.005
273.005
273.004
273.004
273.003
273.003
273.002
273.001
273.001
273
273.005
273.005
273.005
273.005
273.005
273.005
273.005
273.004
273.004
273.004
273.004
273.003
273.003
273.003
273.002
273.002
273.001
273.001
273.001
273
273.003
273.003
273.003
273.003
273.003
273.003
273.003
273.003
273.003
273.003
273.002
273.002
273.002
273.002
273.001
273.001
273.001
273.001
273
273
273.002
273.002
273.002
273.002
273.002
273.002
273.002
273.002
273.002
273.002
273.002
273.001
273.001
273.001
273.001
273.001
273.001
273
273
273
273.002
273.002
273.002
273.001
273.001
273.001
273.001
273.001
273.001
273.001
273.001
273.001
273.001
273.001
273.001
273.001
273
273
273
273
273.001
273.001
273.001
273.001
273.001
273.001
273.001
273.001
273.001
273.001
273.001
273.001
273.001
273.001
273
273
273
273
273
273
273.001
273.001
273.001
273.001
273.001
273.001
273.001
273.001
273.001
273.001
273.001
273
273
273
273
273
273
273
273
273
273.001
273.001
273.001
273.001
273.001
273.001
273.001
273.001
273.001
273
273
273
273
273
273
273
273
273
273
273
)
;

boundaryField
{
    topWall
    {
        type            zeroGradient;
    }
    bottomWall
    {
        type            codedFixedValue;
        value           uniform 493;
        name            heating;
        code            #{
            const scalar t = this->db().time().value();
            const scalar Ttemp = 273 + 10*t;
            operator==(Ttemp);
        #};
    }
    sideWallL
    {
        type            symmetry;
    }
    sideWallR
    {
        type            fixedValue;
        value           uniform 273;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
